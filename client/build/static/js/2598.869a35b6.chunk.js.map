{"version":3,"file":"static/js/2598.869a35b6.chunk.js","mappings":"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","sources":["components/contact/contactform.jsx","components/formdialog.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport \"../../styling/contact/contactform.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport React, { useRef } from \"react\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport FormDialog from \"../formdialog\";\r\n\r\nfunction ContactForm() {\r\n  /*States for the form fields*/\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  /*Honeypot*/\r\n  const [name, setName] = useState(false);\r\n\r\n  /*Dialog*/\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Obtain sheetbest contact link\r\n  var SHEETBEST_CONTACT_LINK;\r\n\r\n  axios\r\n    .get(`${process.env.REACT_APP_API_URL}/form/sheetbest/contact`)\r\n    .then((response) => {\r\n      SHEETBEST_CONTACT_LINK = response.data;\r\n    });\r\n\r\n  /*Send data to spreadsheet*/\r\n  const onSubmit = () => {\r\n    axios.post(SHEETBEST_CONTACT_LINK, {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phoneNumber,\r\n      subject,\r\n      message,\r\n    });\r\n\r\n    setOpen(true);\r\n  };\r\n\r\n  // Obtain EmailJs form data\r\n  var EmailJS_SERVICE_ID;\r\n  var EmailJS_PUBLIC_KEY;\r\n\r\n  axios\r\n    .get(`${process.env.REACT_APP_API_URL}/form/forminfo`)\r\n    .then((response) => {\r\n      EmailJS_SERVICE_ID = response.data.SERVICE_ID;\r\n      EmailJS_PUBLIC_KEY = response.data.PUBLIC_KEY;\r\n    });\r\n\r\n  // Obtain EmailJS registration template ID\r\n  var EmailJS_CONTACT_TEMPLATE_ID;\r\n\r\n  axios\r\n    .get(`${process.env.REACT_APP_API_URL}/form/emailjs/contact`)\r\n    .then((response) => {\r\n      EmailJS_CONTACT_TEMPLATE_ID = response.data;\r\n    });\r\n\r\n  /*Send data to email*/\r\n  const form = useRef();\r\n  const sendEmail = (e) => {\r\n    if (!name) {\r\n      e.preventDefault();\r\n\r\n      emailjs\r\n        .sendForm(\r\n          EmailJS_SERVICE_ID,\r\n          EmailJS_CONTACT_TEMPLATE_ID,\r\n          form.current,\r\n          EmailJS_PUBLIC_KEY\r\n        )\r\n        .then((result) => {\r\n          e.target.reset();\r\n        });\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <FormDialog\r\n          open={open}\r\n          closeDialog={setOpen}\r\n          title=\"Thank you for Contacting Infokidz!\"\r\n          description=\"We'll be in touch with you shortly\"\r\n        />\r\n      )}\r\n      <div id=\"contactform\">\r\n        <h2 id=\"contactform-title\">We'd love to answer your questions!</h2>\r\n\r\n        {/*Form*/}\r\n        <Card>\r\n          <CardContent>\r\n            <Typography id=\"contactform-title2\">\r\n              {\" \"}\r\n              Contact us through a{\" \"}\r\n              <a href=\"tel:780-966-7700\" id=\"contactform-link\">\r\n                phone call\r\n              </a>{\" \"}\r\n              or by filling out this form:\r\n            </Typography>\r\n            <form ref={form} onSubmit={sendEmail}>\r\n              <TextField\r\n                label=\"name\"\r\n                variant=\"outlined\"\r\n                size=\"normal\"\r\n                fullWidth\r\n                style={{\r\n                  display: \"none\",\r\n                  visibility: \"hidden\",\r\n                }}\r\n                name=\"name\"\r\n                onChange={() => setName(true)}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"First Name\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    size=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 30 }} // font size of input text and max-length of input\r\n                    InputLabelProps={{ style: { fontSize: 24 } }} // font size of input label\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 30 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 50 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"phoneNumber\"\r\n                    label=\"Phone Number\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    inputProps={{ style: { fontSize: 24 } }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Subject\"\r\n                    name=\"subject\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 120 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setSubject(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Message\"\r\n                    name=\"message\"\r\n                    placeholder=\"Please type your message here\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={5}\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 1200 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3} md={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    id=\"contactform-submit\"\r\n                    fullWidth\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import \"../styling/formdialog.css\";\r\nimport * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nfunction FormDialog(props) {\r\n  return (\r\n    <div id=\"formdialog\">\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={() => props.closeDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.description}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => props.closeDialog(false)}\r\n            autoFocus\r\n            id=\"formdialog-button\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormDialog;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"],"names":["SHEETBEST_CONTACT_LINK","EmailJS_SERVICE_ID","EmailJS_PUBLIC_KEY","EmailJS_CONTACT_TEMPLATE_ID","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","subject","setSubject","message","setMessage","name","setName","open","setOpen","axios","process","then","response","data","SERVICE_ID","PUBLIC_KEY","form","useRef","closeDialog","title","description","id","Card","CardContent","Typography","href","ref","onSubmit","e","preventDefault","emailjs","current","result","target","reset","TextField","label","variant","size","fullWidth","style","display","visibility","onChange","Grid","container","spacing","alignItems","justifyContent","item","xs","sm","required","inputProps","fontSize","maxLength","InputLabelProps","value","type","placeholder","multiline","rows","md","Button","props","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","autoFocus","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","overridesResolver","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}