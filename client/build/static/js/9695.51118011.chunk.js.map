{"version":3,"file":"static/js/9695.51118011.chunk.js","mappings":"mOAIMA,EAAsBC,EAAAA,MAAW,kBACrC,qEAEIC,EAAaD,EAAAA,MAAW,kBAC5B,mGAEIE,EAAiBF,EAAAA,MAAW,kBAChC,+EAEIG,EAASH,EAAAA,MAAW,kBAAM,+EAC1BI,EAASJ,EAAAA,MAAW,kBAAM,+EA6JhC,UA3JA,WAEE,IAOIK,EAPJ,GAA8BC,EAAAA,EAAAA,UAAS,QAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,SAAjC,eAAOG,EAAP,KAAaC,EAAb,KAGA,GAA8CJ,EAAAA,EAAAA,WAAS,GAAvD,eAAOK,EAAP,KAAwBC,EAAxB,KAKAC,IAAAA,IAAA,UAAaC,gDAAb,uBAAgEC,MAC9D,SAACC,GACCX,EAAeW,EAASC,SAI5BC,EAAAA,EAAAA,YAAU,WAERL,IAAAA,IAAA,UAAaC,gDAAb,gBAAyDC,MACvD,SAACC,GAEKA,EAASC,OAASZ,GAAiC,MAAjBW,EAASC,KAC7CL,GAAmB,GAEnBA,GAAmB,QAIxB,CAACP,IAGJ,IAeMc,GACJ,iCACE,SAAC,EAAAC,SAAD,CACEC,UACE,SAAC,IAAD,CAAkBC,MAAO,CAAEC,WAAY,MAAOC,UAAW,SAF7D,UAKE,SAACpB,EAAD,OAEF,gBACEkB,MAAO,CACLG,MAAO,OACPC,OAAQ,OACRC,UAAW,UAJf,UAOE,SAAC,IAAD,CACEC,QAAS,WA/BfC,OAAOC,KAAP,UACKhB,gDADL,yBAEE,UA8BIiB,UAAU,SACVC,QAAQ,YACRV,MAAO,CACLI,OAAQ,OACRO,OAAQ,OACRT,UAAW,QAPf,uBAaF,SAAC,EAAAJ,SAAD,CACEC,UACE,SAAC,IAAD,CAAkBC,MAAO,CAAEC,WAAY,MAAOC,UAAW,SAF7D,UAKE,SAACrB,EAAD,SAMA+B,GACJ,iCACE,SAAC,EAAAd,SAAD,CACEC,UACE,SAAC,IAAD,CAAkBC,MAAO,CAAEC,WAAY,MAAOC,UAAW,SAF7D,UAKE,SAACpB,EAAD,OAEF,gBACEkB,MAAO,CACLG,MAAO,OACPC,OAAQ,OACRC,UAAW,UAJf,UAOE,SAAC,IAAD,CACEC,QAAS,kBA/DfC,OAAOC,KAAP,UAAehB,gDAAf,gBAA4D,cAE5DF,GAAmB,IA8DbmB,UAAU,SACVC,QAAQ,YACRV,MAAO,CACLI,OAAQ,OACRO,OAAQ,OACRT,UAAW,QAPf,wBAaF,SAAC,EAAAJ,SAAD,CACEC,UACE,SAAC,IAAD,CAAkBC,MAAO,CAAEC,WAAY,MAAOC,UAAW,SAF7D,UAKE,SAACtB,EAAD,OAEF,SAAC,EAAAkB,SAAD,CACEC,UACE,SAAC,IAAD,CAAkBC,MAAO,CAAEC,WAAY,MAAOC,UAAW,SAF7D,UAKE,SAACzB,EAAD,CACEQ,QAASA,EACTC,WAAYA,EACZC,KAAMA,EACNC,QAASA,OAGb,SAAC,EAAAU,SAAD,CACEC,UACE,SAAC,IAAD,CAAkBC,MAAO,CAAEC,WAAY,MAAOC,UAAW,SAF7D,UAKE,SAACvB,EAAD,CAAYM,QAASA,EAASE,KAAMA,EAAM0B,SAAS,OAErD,SAAC,EAAAf,SAAD,CACEC,UACE,SAAC,IAAD,CAAkBC,MAAO,CAAEC,WAAY,MAAOC,UAAW,SAF7D,UAKE,SAACrB,EAAD,SAKN,OAAOQ,EAAkBuB,EAAYf","sources":["components/pages/practice-worksheets-admin.jsx"],"sourcesContent":["import React, { Suspense, useState, useEffect } from \"react\";\r\nimport \"../../App.css\";\r\nimport { Button, CircularProgress } from \"@mui/material\";\r\nimport Axios from \"axios\";\r\nconst WorksheetsSelection = React.lazy(() =>\r\n  import(\"../practice-worksheets/worksheetsselection\")\r\n);\r\nconst Worksheets = React.lazy(() =>\r\n  import(\"../practice-worksheets/worksheets\")\r\n);\r\nconst WorksheetsForm = React.lazy(() =>\r\n  import(\"../practice-worksheets/worksheetsform\")\r\n);\r\nconst Footer = React.lazy(() => import(\"../footer\"));\r\nconst NavBar = React.lazy(() => import(\"../navbar\"));\r\n\r\nfunction PracticeWorksheetsAdmin() {\r\n  // States for form selection options\r\n  const [subject, setSubject] = useState(\"Math\");\r\n  const [sort, setSort] = useState(\"Grade\");\r\n\r\n  // Did authentication succeed\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Obtain correct email\r\n  var correctEmail;\r\n\r\n  Axios.get(`${process.env.REACT_APP_API_URL}/auth/correctemail`).then(\r\n    (response) => {\r\n      correctEmail = response.data;\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Obtain current email\r\n    Axios.get(`${process.env.REACT_APP_API_URL}/auth/email`).then(\r\n      (response) => {\r\n        // If the correct user has logged in, allow them acccess\r\n        if (response.data === correctEmail && response.data != null) {\r\n          setIsAuthenticated(true);\r\n        } else {\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n    );\r\n  }, [correctEmail]);\r\n\r\n  // Google Authentication\r\n  const authenticate = () => {\r\n    window.open(\r\n      `${process.env.REACT_APP_API_URL}/auth/google/callback`,\r\n      \"_self\"\r\n    );\r\n  };\r\n\r\n  // Log out\r\n  const logout = () => {\r\n    window.open(`${process.env.REACT_APP_API_URL}/auth/logout`, \"_self\");\r\n\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Login page to display before successful login\r\n  const loginPage = (\r\n    <>\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n      >\r\n        <NavBar />\r\n      </Suspense>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"40vh\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => authenticate()}\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          style={{\r\n            height: \"35px\",\r\n            margin: \"auto\",\r\n            marginTop: \"20vh\",\r\n          }}\r\n        >\r\n          Log In\r\n        </Button>\r\n      </div>\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n      >\r\n        <Footer />\r\n      </Suspense>\r\n    </>\r\n  );\r\n\r\n  // Admin page to display upon successful login\r\n  const adminPage = (\r\n    <>\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n      >\r\n        <NavBar />\r\n      </Suspense>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"20vh\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => logout()}\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          style={{\r\n            height: \"35px\",\r\n            margin: \"auto\",\r\n            marginTop: \"10vh\",\r\n          }}\r\n        >\r\n          Log Out\r\n        </Button>\r\n      </div>\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n      >\r\n        <WorksheetsForm />\r\n      </Suspense>\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n      >\r\n        <WorksheetsSelection\r\n          subject={subject}\r\n          setSubject={setSubject}\r\n          sort={sort}\r\n          setSort={setSort}\r\n        />\r\n      </Suspense>\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n      >\r\n        <Worksheets subject={subject} sort={sort} isAdmin={true} />\r\n      </Suspense>\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n      >\r\n        <Footer />\r\n      </Suspense>\r\n    </>\r\n  );\r\n\r\n  return isAuthenticated ? adminPage : loginPage;\r\n}\r\n\r\nexport default PracticeWorksheetsAdmin;\r\n"],"names":["WorksheetsSelection","React","Worksheets","WorksheetsForm","Footer","NavBar","correctEmail","useState","subject","setSubject","sort","setSort","isAuthenticated","setIsAuthenticated","Axios","process","then","response","data","useEffect","loginPage","Suspense","fallback","style","marginLeft","marginTop","width","height","textAlign","onClick","window","open","className","variant","margin","adminPage","isAdmin"],"sourceRoot":""}