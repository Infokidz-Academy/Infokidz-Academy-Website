{"version":3,"file":"static/js/598.624fbc76.chunk.js","mappings":"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","sources":["components/contact/contactform.jsx","components/formdialog.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport \"../../styling/contact/contactform.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport React, { useRef } from \"react\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport FormDialog from \"../formdialog\";\r\n\r\nfunction ContactForm() {\r\n  /*States for the form fields*/\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  /*Honeypot*/\r\n  const [name, setName] = useState(false);\r\n\r\n  /*Dialog*/\r\n  const [open, setOpen] = useState(false);\r\n\r\n  /*Send data to spreadsheet*/\r\n  const onSubmit = () => {\r\n    axios.post(process.env.REACT_APP_SHEETBEST_CONTACT_LINK, {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phoneNumber,\r\n      subject,\r\n      message,\r\n    });\r\n\r\n    setOpen(true);\r\n  };\r\n\r\n  /*Send data to email*/\r\n  const form = useRef();\r\n  const sendEmail = (e) => {\r\n    if (!name) {\r\n      e.preventDefault();\r\n\r\n      emailjs\r\n        .sendForm(\r\n          process.env.REACT_APP_EmailJS_SERVICE_ID,\r\n          process.env.REACT_APP_EmailJS_CONTACT_TEMPLATE_ID,\r\n          form.current,\r\n          process.env.REACT_APP_EmailJS_PUBLIC_KEY\r\n        )\r\n        .then((result) => {\r\n          e.target.reset();\r\n        });\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <FormDialog\r\n          open={open}\r\n          closeDialog={setOpen}\r\n          title=\"Thank you for Contacting Infokidz!\"\r\n          description=\"We'll be in touch with you shortly\"\r\n        />\r\n      )}\r\n      <div id=\"contactform\">\r\n        <h2 id=\"contactform-title\">We'd love to answer your questions!</h2>\r\n\r\n        {/*Form*/}\r\n        <Card>\r\n          <CardContent>\r\n            <Typography id=\"contactform-title2\">\r\n              {\" \"}\r\n              Contact us through a{\" \"}\r\n              <a href=\"tel:780-966-7700\" id=\"contactform-link\">\r\n                phone call\r\n              </a>{\" \"}\r\n              or by filling out this form:\r\n            </Typography>\r\n            <form ref={form} onSubmit={sendEmail}>\r\n              <TextField\r\n                label=\"name\"\r\n                variant=\"outlined\"\r\n                size=\"normal\"\r\n                fullWidth\r\n                style={{\r\n                  display: \"none\",\r\n                  visibility: \"hidden\",\r\n                }}\r\n                name=\"name\"\r\n                onChange={() => setName(true)}\r\n              />\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"First Name\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    size=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 30 }} // font size of input text and max-length of input\r\n                    InputLabelProps={{ style: { fontSize: 24 } }} // font size of input label\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 30 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 50 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"phoneNumber\"\r\n                    label=\"Phone Number\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    inputProps={{ style: { fontSize: 24 } }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Subject\"\r\n                    name=\"subject\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 120 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setSubject(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Message\"\r\n                    name=\"message\"\r\n                    placeholder=\"Please type your message here\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={5}\r\n                    inputProps={{ style: { fontSize: 24 }, maxLength: 1200 }}\r\n                    InputLabelProps={{ style: { fontSize: 24 } }}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3} md={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    id=\"contactform-submit\"\r\n                    fullWidth\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import \"../styling/formdialog.css\";\r\nimport * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nfunction FormDialog(props) {\r\n  return (\r\n    <div id=\"formdialog\">\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={() => props.closeDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.description}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => props.closeDialog(false)}\r\n            autoFocus\r\n            id=\"formdialog-button\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormDialog;\r\n"],"names":["useState","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","subject","setSubject","message","setMessage","name","setName","open","setOpen","form","useRef","closeDialog","title","description","id","Card","CardContent","Typography","href","ref","onSubmit","e","preventDefault","emailjs","process","current","then","result","target","reset","axios","TextField","label","variant","size","fullWidth","style","display","visibility","onChange","Grid","container","spacing","alignItems","justifyContent","item","xs","sm","required","inputProps","fontSize","maxLength","InputLabelProps","value","type","placeholder","multiline","rows","md","Button","props","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","autoFocus"],"sourceRoot":""}