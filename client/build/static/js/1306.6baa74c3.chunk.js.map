{"version":3,"file":"static/js/1306.6baa74c3.chunk.js","mappings":"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","sources":["components/practice-worksheets/worksheetsentry.jsx","components/practice-worksheets/worksheetsentries.jsx","components/practice-worksheets/worksheets.jsx"],"sourcesContent":["import \"../../styling/practice-worksheets/worksheetsentry.css\";\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, TextField } from \"@mui/material\";\r\n\r\nfunction WorksheetsEntry(props) {\r\n  // Edit data\r\n  const [draftTopic, setDraftTopic] = useState(\"\");\r\n  const [draftGrade, setDraftGrade] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // Delete worksheet HTTP request\r\n  const handleDelete = (id) => {\r\n    Axios.delete(`${process.env.REACT_APP_API_URL}/api/delete-worksheet/${id}`);\r\n  };\r\n\r\n  // Update worksheet HTTP request\r\n  const handleEdit = (id, e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    // Add data to formData\r\n    formData.append(\"draftTopic\", draftTopic);\r\n    formData.append(\"draftGrade\", draftGrade);\r\n\r\n    // Refresh input fields\r\n    setDraftGrade(\"\");\r\n    setDraftTopic(\"\");\r\n\r\n    // Send data to server\r\n    Axios.put(\r\n      `${process.env.REACT_APP_API_URL}/api/update-worksheet/${id}`,\r\n      formData\r\n    );\r\n\r\n    // Remove edit form\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // Cancel edit form\r\n  const cancelEdit = () => {\r\n    setIsEditing(false);\r\n    setDraftGrade(\"\");\r\n    setDraftTopic(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <a href={props.worksheet.pdfUrl} id=\"worksheetsentry-link\">\r\n        {props.worksheet.name}\r\n      </a>{\" \"}\r\n      | {props.description}:{\" \"}\r\n      {props.description === \"Topic\"\r\n        ? props.worksheet.topic\r\n        : props.worksheet.grade}\r\n      {props.isAdmin && (\r\n        <Button\r\n          onClick={() => handleDelete(props.worksheet._id)}\r\n          id=\"worksheetsentry-delete\"\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n        >\r\n          Delete\r\n        </Button>\r\n      )}\r\n      {props.isAdmin && (\r\n        <Button\r\n          onClick={() => setIsEditing(true)}\r\n          id=\"worksheetsentry-edit\"\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n        >\r\n          Edit\r\n        </Button>\r\n      )}\r\n      {isEditing && (\r\n        <div id=\"worksheetsentry-form\">\r\n          <form\r\n            onSubmit={(e) => handleEdit(props.worksheet._id, e)}\r\n            method=\"post\"\r\n          >\r\n            <Grid container spacing={1} justifyContent=\"center\">\r\n              <Grid item xs={12} sm={4} md={4} lg={3}>\r\n                <TextField\r\n                  label=\"Topic\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  value={draftTopic}\r\n                  inputProps={{ style: { fontSize: 19 }, maxLength: 30 }} // font size of input text and max-length of input\r\n                  InputLabelProps={{ style: { fontSize: 19 } }} // font size of input label\r\n                  onChange={(e) => setDraftTopic(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4} md={4} lg={3}>\r\n                <TextField\r\n                  label=\"Grade\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  value={draftGrade}\r\n                  inputProps={{ style: { fontSize: 19 }, maxLength: 30 }} // font size of input text and max-length of input\r\n                  InputLabelProps={{ style: { fontSize: 19 } }} // font size of input label\r\n                  onChange={(e) => setDraftGrade(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} sm={2} md={2} lg={1}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  className=\"worksheetsentry-button\"\r\n                  fullWidth\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={4} sm={2} md={2} lg={1}>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  className=\"worksheetsentry-button\"\r\n                  fullWidth\r\n                  onClick={() => cancelEdit()}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorksheetsEntry;\r\n","import \"../../styling/faq/questions.css\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport WorksheetsEntry from \"./worksheetsentry\";\r\n\r\nfunction WorksheetsEntries(props) {\r\n  return (\r\n    <Accordion className=\"accordion\">\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        className=\"accordion-header\"\r\n      >\r\n        <Typography component={\"span\"} className=\"accordion-title\">\r\n          {props.heading}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography component={\"span\"} className=\"accordion-description\">\r\n          {props.worksheetSet.map((worksheet) => {\r\n            return (\r\n              <WorksheetsEntry\r\n                worksheet={worksheet}\r\n                description={props.description}\r\n                isAdmin={props.isAdmin}\r\n                key={worksheet.name}\r\n              />\r\n            );\r\n          })}\r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default WorksheetsEntries;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"../../styling/practice-worksheets/worksheets.css\";\r\nimport WorksheetsEntries from \"./worksheetsentries\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nfunction Worksheets(props) {\r\n  // Worksheets data\r\n  const [worksheets, setWorksheets] = useState([]);\r\n\r\n  // Obtain worksheets from server\r\n  useEffect(() => {\r\n    async function getWorksheets() {\r\n      const response = await Axios.get(\r\n        `${process.env.REACT_APP_API_URL}/api/worksheets`\r\n      );\r\n      setWorksheets(response.data);\r\n    }\r\n    getWorksheets();\r\n  }, []);\r\n\r\n  // Map for math worksheets sorted by grades\r\n  let mathGrades = new Map([]);\r\n  for (let i = 3; i < 13; i++) {\r\n    mathGrades.set(`${i}`, []);\r\n  }\r\n\r\n  // Map for english worksheets sorted by grades\r\n  let englishGrades = new Map([]);\r\n  for (let i = 3; i < 13; i++) {\r\n    englishGrades.set(`${i}`, []);\r\n  }\r\n\r\n  // List of math topics\r\n  let mathTopicsList = [\r\n    \"Angles\",\r\n    \"Area\",\r\n    \"Circumference\",\r\n    \"Decimal Arithmetic\",\r\n    \"Fraction Arithmetic\",\r\n  ];\r\n\r\n  // Map for math worksheets sorted by topics\r\n  let mathTopics = new Map([]);\r\n  for (let i = 0; i < mathTopicsList.length; i++) {\r\n    mathTopics.set(`${mathTopicsList[i]}`, []);\r\n  }\r\n\r\n  // List of english topics\r\n  let englishTopicsList = [];\r\n\r\n  // Map for english worksheets sorted by topics\r\n  let englishTopics = [];\r\n  for (let i = 0; i < englishTopicsList.length; i++) {\r\n    englishTopics.set(`${englishTopicsList[i]}`, []);\r\n  }\r\n\r\n  // Traverse worksheets and add the them to the appropriate collections\r\n  function updateWithData() {\r\n    worksheets.forEach(function (worksheet) {\r\n      if (worksheet.subject === \"Math\") {\r\n        mathTopics.get(worksheet.topic).push(worksheet);\r\n        mathGrades.get(worksheet.grade).push(worksheet);\r\n      }\r\n      if (worksheet.subject === \"English\") {\r\n        englishTopics.get(worksheet.topic).push(worksheet);\r\n        englishGrades.get(worksheet.grade).push(worksheet);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateWithData();\r\n\r\n  // Set of worksheets to render for math grades option\r\n  let mathGradesWorksheets = [];\r\n\r\n  for (let i = 3; i < 13; i++) {\r\n    mathGradesWorksheets.push(\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n        key={i}\r\n      >\r\n        <WorksheetsEntries\r\n          heading={`Grade ${i}`}\r\n          worksheetSet={mathGrades.get(`${i}`)}\r\n          description=\"Topic\"\r\n          isAdmin={props.isAdmin}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  // Set of worksheets to render for english grades option\r\n  let englishGradesWorksheets = [];\r\n\r\n  for (let i = 3; i < 13; i++) {\r\n    englishGradesWorksheets.push(\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n        key={i}\r\n      >\r\n        <WorksheetsEntries\r\n          heading={`Grade ${i}`}\r\n          worksheetSet={englishGrades.get(`${i}`)}\r\n          description=\"Topic\"\r\n          isAdmin={props.isAdmin}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  // Set of worksheets to render for math topics option\r\n  let mathTopicsWorksheets = [];\r\n\r\n  for (let i = 0; i < mathTopicsList.length; i++) {\r\n    mathTopicsWorksheets.push(\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n        key={i}\r\n      >\r\n        <WorksheetsEntries\r\n          heading={`${mathTopicsList[i]}`}\r\n          worksheetSet={mathTopics.get(`${mathTopicsList[i]}`)}\r\n          description=\"Grade\"\r\n          isAdmin={props.isAdmin}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  // Set of worksheets to render for english topics option\r\n  let englishTopicsWorksheets = [];\r\n\r\n  for (let i = 0; i < englishTopicsList.length; i++) {\r\n    englishTopicsWorksheets.push(\r\n      <Suspense\r\n        fallback={\r\n          <CircularProgress style={{ marginLeft: \"48%\", marginTop: \"20%\" }} />\r\n        }\r\n        key={i}\r\n      >\r\n        <WorksheetsEntries\r\n          heading={`${englishTopicsList[i]}`}\r\n          worksheetSet={englishTopics.get(`${englishTopicsList[i]}`)}\r\n          description=\"Grade\"\r\n          isAdmin={props.isAdmin}\r\n        />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"worksheets\">\r\n      {props.subject === \"Math\" &&\r\n        props.sort === \"Grade\" &&\r\n        mathGradesWorksheets.map((entry) => {\r\n          return entry;\r\n        })}\r\n\r\n      {props.subject === \"English\" &&\r\n        props.sort === \"Grade\" &&\r\n        englishGradesWorksheets.map((entry) => {\r\n          return entry;\r\n        })}\r\n\r\n      {props.subject === \"Math\" &&\r\n        props.sort === \"Topic\" &&\r\n        mathTopicsWorksheets.map((entry) => {\r\n          return entry;\r\n        })}\r\n\r\n      {props.subject === \"English\" &&\r\n        props.sort === \"Topic\" &&\r\n        englishTopicsWorksheets.map((entry) => {\r\n          return entry;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Worksheets;\r\n"],"names":["props","useState","draftTopic","setDraftTopic","draftGrade","setDraftGrade","isEditing","setIsEditing","href","worksheet","pdfUrl","id","name","description","topic","grade","isAdmin","Button","onClick","_id","Axios","process","className","variant","onSubmit","e","preventDefault","formData","FormData","append","handleEdit","method","Grid","container","spacing","justifyContent","item","xs","sm","md","lg","TextField","label","size","fullWidth","value","inputProps","style","fontSize","maxLength","InputLabelProps","onChange","target","type","Accordion","AccordionSummary","expandIcon","ExpandMore","Typography","component","heading","AccordionDetails","worksheetSet","map","worksheets","setWorksheets","useEffect","response","data","getWorksheets","mathGrades","Map","i","set","englishGrades","mathTopicsList","mathTopics","length","englishTopicsList","englishTopics","forEach","subject","get","push","mathGradesWorksheets","Suspense","fallback","CircularProgress","marginLeft","marginTop","englishGradesWorksheets","mathTopicsWorksheets","englishTopicsWorksheets","sort","entry"],"sourceRoot":""}